<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source=".\Images.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <RadialGradientBrush x:Key="DefaultBackground" RadiusX="0.5" RadiusY="0.5">
        <GradientStop Offset="0.5" Color="#d7e4f7" />
        <GradientStop Offset="1" Color="#d7e4f7" />
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="DefaultToorBarTray" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Offset="0" Color="SteelBlue" />
        <GradientStop Offset="0.4" Color="SteelBlue" />
        <GradientStop Offset="1" Color="SteelBlue" />

    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DefaultTitleground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="SkyBlue" />
        <GradientStop Offset="0.5" Color="LightBlue" />
        <GradientStop Offset="1" Color="White" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PanelTitleGround" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Offset="0" Color="SteelBlue" />
        <GradientStop Offset="0.4" Color="SkyBlue" />
        <GradientStop Offset="0.9" Color="CadetBlue" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DefaultForeground">Black</SolidColorBrush>
    <SolidColorBrush x:Key="ToobarBackground"  Color="DarkCyan"/>
    <SolidColorBrush x:Key="DefaultForegroundWhite">White</SolidColorBrush>
    <SolidColorBrush x:Key="DefaultBoardround">steelBlue</SolidColorBrush>
    <system:Double x:Key="DeafultContentFontSize">13</system:Double>
    <CornerRadius x:Key="DefaultBorderCornerRadius">5</CornerRadius>
    <SolidColorBrush x:Key="ScrollForeground">Green</SolidColorBrush>
    <SolidColorBrush x:Key="TemplateEditorBackground" Color="#2DC1F2"/>
    <SolidColorBrush x:Key="WindowEditorBackground" Color="Red" />

    <Style x:Key="InCenterStackPanelStyle" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,5" />
    </Style>
    <Style x:Key="InCenterLabelStyle" TargetType="Label">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style TargetType="Label">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="15" />
    </Style>
    <Style x:Key="TxtPwd" TargetType="{x:Type TextBox}">
        <Setter Property="TextDecorations">
            <Setter.Value>
                <TextDecorationCollection>
                    <TextDecoration>
                        <TextDecoration.Pen>
                            <Pen Thickness="10" Brush="Black"   EndLineCap="Round" StartLineCap="Round"     DashCap="Round"  >
                                <Pen.DashStyle>
                                    <DashStyle Dashes="0.0,1.2" Offset="0.6"/>
                                </Pen.DashStyle>
                            </Pen>
                        </TextDecoration.Pen>
                        <TextDecoration.Location>
                            <TextDecorationLocation>Strikethrough</TextDecorationLocation>
                        </TextDecoration.Location>
                    </TextDecoration>
                </TextDecorationCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="FontFamily" Value="Courier New"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    </Style>
    <Style x:Key="DataGridCellToolTips" TargetType="DataGridCell">
        <Setter Property="ToolTipService.ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=Content.Text}"/>
    </Style>
    <Style TargetType="ToolTip">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border
                                Padding="5"
                                Background="SkyBlue"
                                BorderBrush="SteelBlue"
                                BorderThickness="1"
                                CornerRadius="5" >
                        <!--Content="{TemplateBinding ContentControl.Content}"-->
                        <ContentPresenter
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Width="Auto">
                            <ContentPresenter.Content>
                                <TextBlock Text="{TemplateBinding ContentControl.Content}" TextWrapping="Wrap"/>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="editorRowStyle" BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="DataGridRow">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="{StaticResource DefaultBackground}" />
        <Setter Property="MaxHeight" Value="33" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Foreground" Value="Black" />
        <Style.Triggers>
            <!--  隔行换色  -->
            <!--<Trigger Property="AlternationIndex" Value="0">
                <Setter Property="Background" Value="#e7e7e7" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="#f2f2f2" />
            </Trigger>-->
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="SkyBlue" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="PanelTitleStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="5,0,0,0" />
        <Setter Property="Background" Value="{DynamicResource PanelTitleGround}" />
    </Style>
    <Style x:Key="FlatButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource DefaultBoardround}" />
        <Setter Property="BorderThickness" Value="1" />
        <!--<Setter Property="Cursor" Value="Hand" />-->
        <Setter Property="FontSize" Value="{DynamicResource DeafultContentFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultForeground}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="{TemplateBinding Background}">
                        <Border
                            x:Name="BtnHoverBg"
                            Margin="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="{DynamicResource DefaultBorderCornerRadius}"
                            Style="{x:Null}" />
                        <ContentPresenter
                            x:Name="BtnContent"
                            Margin="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnHoverBg" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush Opacity=".7" StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="White" />
                                        <GradientStop Offset="0.5" Color="Transparent" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="BtnContent" Property="Margin" Value="1,1,0,0" />
                        </Trigger>-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BtnHoverBg" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush Opacity=".9" StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="White" />
                                        <GradientStop Offset="0.7" Color="Transparent" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="BtnContent" Property="Margin" Value="2,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".6" />
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter TargetName="BtnHoverBg" Property="BorderBrush" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CornerButton" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{StaticResource DefaultBackground}" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="CheckBoxBorder"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="2"
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"  x:Name="BtnContent">
                            <ContentPresenter.Effect>
                                <DropShadowEffect BlurRadius="5" ShadowDepth="1" />
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="DarkGray" />
                            <Setter TargetName="CheckBoxBorder" Property="Background" Value="DarkGray" />
                            <Setter Property="Foreground" Value="LightGray" />
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckBoxBorder" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush Opacity=".7" StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="White" />
                                        <GradientStop Offset="0.5" Color="Transparent" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="CheckBoxBorder" Property="Margin" Value="1,1,0,0" />
                        </Trigger>-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CheckBoxBorder" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush Opacity=".9" StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="DarkGray" />
                                        <GradientStop Offset="0.7" Color="Transparent" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="BtnContent" Property="Margin" Value="2,2,1,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UnionTreeItem" TargetType="{x:Type TreeViewItem}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <StackPanel
                            Height="25"
                            Orientation="Horizontal"
                            Style="{x:Null}">
                            <Path
                                x:Name="PART_CollapsedPath"
                                Margin="3,2"
                                VerticalAlignment="Center"
                                Data="M0 0 L10 0 L5 7Z"
                                Fill="Transparent"
                                SnapsToDevicePixels="True"
                                Stroke="Black"
                                Visibility="Collapsed" />
                            <Path
                                x:Name="PART_ExpandedPath"
                                Margin="3,2"
                                VerticalAlignment="Center"
                                Data="M0 0 L0 10 L7 5Z"
                                Fill="Black"
                                SnapsToDevicePixels="True"
                                Visibility="Collapsed" />
                            <Border
                                x:Name="PART_BackgroundBg"
                                Padding="3,0"
                                Background="Transparent"
                                CornerRadius="5">
                                <ContentPresenter VerticalAlignment="Center" ContentSource="Header" />
                            </Border>
                        </StackPanel>
                        <StackPanel
                            x:Name="PART_ItemsContainer"
                            Grid.Row="1"
                            Margin="10,0,0,0"
                            IsItemsHost="True"
                            Style="{x:Null}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_BackgroundBg" Property="Background" Value="Green" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasItems" Value="True" />
                                <Condition Property="IsExpanded" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_ExpandedPath" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasItems" Value="True" />
                                <Condition Property="IsExpanded" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_CollapsedPath" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="PART_ItemsContainer" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="PART_ItemsContainer" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>